# ===============================================================
# TODOs
# ===============================================================

  1. Render natural resource tiles.
  2. Render rivers, with color cycling.
  3. Add color cycling to sea lane tile.
  4. Fix beach tiles.
  5. Consider adding connectors to diagonally adjacent forest is-
     land tiles.
  6. Need to make sure that units at the colony gate have an
     order to them for a good UX. Actually we may want to have an
     ordering of units on all map squares. Need to see what the
     original game does in this regard. Ditto for units (ships
     and non-ships) in the harbor.
  7. Fix that when clicking outside of an open menu to close it
     the menu plane does not handle the click and it goes through
     to what is underneath of it.
  8. Fix that when clicking on the exit tile in the harbor view,
     up click carries through to the land view and scrolls the
     map. Also, the same things seems to happen when closing an
     open menu by clicking away from it.
  9. When a colony is captured a certain amount of gold is stolen
     (investigate how this is calculated). In the case where
     there is only one colony and it is captured, it appears that
     all of that players gold is taken. It seems reasonable to
     compute the gold stolen as a percentage based on the per-
     centage that the captured colony's population represents of
     the entire population.

# Colony buildings and production:

  1. Create colony building art.
  2. Render colony buildings in colony.

# ===============================================================
# Game Saving
# ===============================================================

  1. Look into data compression for save files. I). Minify rcl as
     much as possible (maybe just add an option to not indent
     while emitting rcl). II). Compress with brotli or zstd.
     III). Export with base64.
  2. Replay?

# ===============================================================
# Reflection
# ===============================================================

  1. Consider adding a generic mechanism for exposing reflected
     C++ types as Lua userdata (C++-owned). This might be pos-
     sible using the Traversable concept which is currently used
     for validating game state.

# ===============================================================
# Lua
# ===============================================================

  1. Add routine for converting from a Lua value to Cdr, and
     therefore to a C++ type. This operation will probably be ex-
     pensive. This may be a bit tricky because not all lua values
     can be converted to Cdr, e.g. lua functions. But
     to_canonical is not failable. Also, it doesn't seem right to
     make the luapp module depend on Cdr, so probably best to
     avoid making {to,from}_canonical overloads for lua types,
     and instead just make a separate API for converting them in
     the rn library. Another tricky thing will be dealing with
     empty lists, which in Lua are just empty tables, which are
     difficult to distinguish from empty tables...
  2. Look into using the Teal language, a typed lua. It looks re-
     ally good, though some have said that it is not mature...
     https://github.com/teal-language/tl
  3. Add support for equality of userdata types in Lua. By de-
     fault a usertype should get an __equal metamethod that
     throws a Lua error when attempting to compare with anything,
     unless the cpp type is equality comparable, in which case it
     should get a proper comparison method.
  4. Create proper Lua API design in order to avoid coupling with
     the C++ modules.
  5. Add some other standard containers like vector,
     unordered_map, etc.

# ===============================================================
# Bugs
# ===============================================================

Low priority:

  - When we toggle from fullscreen to non-fullscreen the mouse
    position is a bit off. This is probably some kind of SDL
    issue where the window thinks that it is in a different posi-
    tion than where it is displayed on screen (off by about 10-20
    pixels). As soon as the window position is moved slightly (by
    dragging) then it is observed to self-correct. Somehow, after
    restoring the window, we need to tell the window to update
    itself.

# ===============================================================
# Build System
# ===============================================================

  - Add support for precompiled headers.  CMake recently added
    this feature and it should be available in a version post
    3.15.x (probably 3.16+).  See:

      https://gitlab.kitware.com/cmake/cmake/commit/fa36e2151d25358c7946a53c4440f0487210770d

  - Add Windows support.

# ===============================================================
# Infrastructure
# ===============================================================

  - Try replacing use of std::variant (base of base::variant)
    with mpark::variant, which some benchmarks say can be much
    faster. But note; it might only be vaster when using `visit`,
    which this code base does not really use.
  - Consider replacing any string-joining stuff with fmt::join,
    but first see if it will be included in C++20.

# ===============================================================
# Rendering
# ===============================================================

  - Animate water.

# ===============================================================
# Basic Game Mechanics
# ===============================================================

  - Review this long document that explains many aspects of
    the game mechanism that may not have been officially stated:
      * https://civilization.fandom.com/wiki/Colonization_tips
      * http://t-a-w.blogspot.com/2007/05/colonization-tips.html

  List of basic game mechanics:

    * All Units

        x sentry
        - goto
        x wait / forfeight
        x moving to friendly squares
        x click on unit to clear orders / open orders window.
        x disband

    * Land Units

        x fortifying
        x military unit attacking military unit
        x military unit attacking civilian
        x military unit attacking trade wagon / treasure
        x unit moving into lost city

    * Ships

        x ship attacking ship (evade, damage, sink)
        - privateer stealth

    * Land Units + Ships

        x ship holding units
        x land unit boarding ship
        x landfall
        x treasure boarding ship

# ===============================================================
# Game Narrative
# ===============================================================

  - royal army
