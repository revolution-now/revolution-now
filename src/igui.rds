# ===============================================================
# igui.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-05-25.
#
# Description: Rds definitions for the igui module.
#
# ===============================================================
# Revolution Now
include "maybe.hpp"

# C++ standard library
include "<string>"
include "<vector>"

namespace "rn"

struct.WindowOptions {
  light_outline 'bool',
}

struct.MessageBoxOptions {
  window 'WindowOptions',
}

struct.ChoiceConfigOption {
  key 'std::string',
  display_name 'std::string',
  disabled 'bool',
}

struct.WindowCancelActions {
  # By default we allow the player to state that they don't wish
  # to provide any input by either hitting escape or by clicking
  # outside the window. But there are cases where we want to
  # limit those for a better user experience.
  disallow_clicking_outside 'bool',
  disallow_escape_key 'bool',
}

# Used to configure a message box that presents the user with
# some choices.
struct.ChoiceConfig {
  # This text will be reflowed and may end up on multiple lines.
  msg 'std::string',

  cancel_actions 'WindowCancelActions',

  # Needs to be a vector for well-defined and customizable order-
  # ing.
  options 'std::vector<ChoiceConfigOption>',

  # Should they be sorted by display name before being displayed.
  sort 'bool',

  # Should something be selected initially? If this is either not
  # set or it is set to an item that is disabled then the initial
  # section will be the first first enabled item. If there are no
  # enabled items then nothing will be selected (though note in
  # that case that input must be optional).
  initial_selection 'maybe<int>',
};

struct.YesNoConfig {
  msg 'std::string',
  cancel_actions 'WindowCancelActions',
  yes_label 'std::string',
  no_label 'std::string',
  no_comes_first 'bool',
}

struct.StringInputConfig {
  msg 'std::string',
  cancel_actions 'WindowCancelActions',
  initial_text 'std::string',
}

struct.IntInputConfig {
  msg 'std::string',
  cancel_actions 'WindowCancelActions',
  initial_value 'int',
  min 'maybe<int>',
  max 'maybe<int>',
}

struct.EnumChoiceConfig {
  # This text will be reflowed and may end up on multiple lines.
  msg 'std::string',

  cancel_actions 'WindowCancelActions',

  # Should they be sorted by display name before being displayed.
  sort 'bool',
}

struct.CheckBoxInfo {
  name 'std::string',
  on 'bool',
  disabled 'bool',
}
