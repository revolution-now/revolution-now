# ===============================================================
# unit-mgr.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2023-03-05.
#
# Description: Rds definitions for the unit-mgr module.
#
# ===============================================================
# Revolution Now
include "ts.hpp" # FIXME: forward declare TS.

# ss
include "ss/colony-id.hpp"
include "ss/colony-job.rds.hpp"
include "ss/dwelling-id.hpp"
include "ss/unit-id.hpp"

# gfx
include "gfx/coord.hpp"

# base
include "base/no-default.hpp"

namespace "rn"

# When a european unit needs to change ownership, this is used to
# specify which state and the parameters needed to initialize
# that state.
sumtype.EuroUnitOwnershipChangeTo {
  free {},
  world {
    # When we move a unit onto the map in general we may need to
    # remove some fog which requires the map updater which re-
    # quires TS. But, we don't want to have to provide TS in the
    # function signature of the function that changes the unit
    # state in general, because most target states do not require
    # TS to move to them. We use the wrapper to force the field
    # to be initialized.
    ts 'base::no_default_linker_wrapper<TS*>',
    target 'Coord',
  },
  colony {
    colony_id 'ColonyId',
    job 'ColonyJob',
  },
  cargo {
    new_holder 'UnitId',
    starting_slot 'int',
  },
  sail_to_new_world {},
  sail_to_harbor {},
  move_to_port {},
  dwelling {
    dwelling_id 'DwellingId',
  },
}
