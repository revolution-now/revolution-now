# ===============================================================
# command.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-13.
#
# Description: RDS definitions for the command module.
#
# ===============================================================
# ss
include "ss/unit-id.hpp"
include "ss/goto.rds.hpp"

# gfx
include "gfx/coord.hpp"

# C++ standard library
include "<vector>"

namespace "rn"

struct.CommandHandlerRunResult {
  # Was the order carried out or not.
  order_was_run 'bool',

  # Any units that need to be prioritized (in the sense of asking
  # for commands) after this order has been carried out. An ex-
  # ample of this would be after units make landfall from a ship,
  # it is natural for them to ask for commands right away.
  units_to_prioritize 'std::vector<UnitId>',

  # This is used to flag that this move was one of the scenarios
  # where the unit could have moved to the tile but was denied
  # because there were not enough movement points, and it was
  # not chosen randomly to move anyway.
  insufficient_movement_points 'bool',
}

# An `command` is a general term describing what the player
# proposes that a unit do when the unit asks the player. Roughly
# speaking, it captures the input that the player gives when the
# unit is waiting for commands. This could include "wait", "goto
# tile X", "move to tile X", "forfeight movement points", "plow
# square", "build colony". command only represent what the
# player has proposed, and so it makes sense to talk about com-
# mands that are not permitted. For example, the player might
# give commands to a unit to "move left", but doing so might
# cause a land unit to go into a sea square without a ship, which
# would not be allowed. In that case, the command is not allowed.
sumtype.command {
  wait        {},
  forfeight   {},
  build       {},
  road        {},
  plow        {},
  fortify     {},
  sentry      {},
  dump        {},
  trade_route {},
  move        { d 'e_direction' },
  go_to       { target 'goto_target' },
  disband     {
    # For use only when issuing a disband command on a tile and
    # not a unit asking for orders.
    tile 'base::maybe<gfx::point>',
  },
}
