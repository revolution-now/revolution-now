# ===============================================================
# gfx.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-04-28.
#
# Description: General graphics-related config info.
#
# ===============================================================
# gfx
include "gfx/pixel.hpp"

# refl
include "refl/enum-map.hpp"

namespace "rn"

# During a pixelation animation (such as e.g. when a unit gets
# defeated in battle) this curve controls the rate at which
# pixels are removed (or added) with time. The "linear" method
# removes them at a constant rate, and the "log" method removes
# them more slowly as the animation progresses, which can make it
# look more "natural," though that is subjective.
enum.e_pixelation_curve {
  log,
  linear,
}

# Use "graphics" instead of "gfx" in order to avoid namespace
# clashing with the gfx namespace, which is used in the gfx li-
# brary in this code base.
namespace "rn.config.graphics"

struct.PixelationCurve {
  # Controls the rate of the pixelation animations.
  curve_type 'e_pixelation_curve',

  # Each depixelation curve type can have its own rate.
  pixelation_per_frame 'refl::enum_map<e_pixelation_curve, double>',
}

namespace "rn"

struct.config_gfx_t {
  # The game will attempt to maintain a frame rate no higher than
  # this value, though it could be lower if the engine or machine
  # cannot keep up.
  target_frame_rate 'int',

  # This will sync frame updates with the monitors update cycles.
  wait_for_vsync 'bool',

  # This is the color used to render the letter on a unit's flag
  # that is not fortified or sentried.
  unit_flag_text_color 'gfx::pixel',

  # This is the color used to render the letter on a unit's flag
  # that is either fortified or sentried.
  unit_flag_text_color_greyed 'gfx::pixel',

  pixelation_curve 'config::graphics::PixelationCurve',
}

config.gfx {}