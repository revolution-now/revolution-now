# ===============================================================
# rn.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-05-05.
#
# Description: General/miscellaneous config info.
#
# ===============================================================
# Revolution Now
include "font.hpp" # FIXME

# ss
include "ss/nation.rds.hpp"
include "ss/settings.rds.hpp"

# refl
include "refl/enum-map.hpp"

# C++ standard library
include "<chrono>"
include "<string>"

namespace "rn.config.rn"

struct.main_window {
  title 'std::string',
}

# TODO: get rid of this after it is fully migrated to
# config/land-view.
struct.viewport {
  pan_speed 'double',
  # This is not the min zoom exactly, it is the factor that the
  # "optimal" zoom will be divided by to get the minimum allowed
  # zoom. The "optimal" zoom is the one that is just small enough
  # to put the entire map on the screen, with a bit of border.
  zoom_min_factor 'double',
  zoom_speed 'double',
  zoom_accel_coeff 'double',
  zoom_accel_drag_coeff 'double',
  pan_accel_init_coeff 'double',
  pan_accel_drag_init_coeff 'double',

  can_reveal_space_around_map 'bool',

  # When the map view needs to scroll to reveal a tile that is
  # off screen it will only perform a smooth scroll if the tile
  # is not too far away. This parameter control how far it is
  # willing to do a smooth scroll; beyond that point if will just
  # jump immediately. This is a multiplicative factor; basically
  # the real distance is divided by this factor before deter-
  # mining whether it is too far away, and so the larger it is,
  # the further the map is willing to smooth scroll. When this is
  # 1.0 then the threshold for scrolling will be roughly one
  # screen length, where screen length is defined as the average
  # of the two screen dimensions. This can be fractional.
  smooth_scroll_threshold 'double',
}

struct.console {
  font 'e_font',
}

struct.power {
  time_till_slow_fps 'std::chrono::seconds',
}

struct.user_settings {
  filename 'std::string',
}

namespace "rn"

struct.config_rn_t {
  main_window   'config::rn::main_window',
  viewport      'config::rn::viewport',
  console       'config::rn::console',
  power         'config::rn::power',
  user_settings 'config::rn::user_settings',

  game_menu_options_defaults 'refl::enum_map<e_game_menu_option, bool>',
}

config.rn {}