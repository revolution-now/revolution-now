# ===============================================================
# old-world.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-10-05.
#
# Description: Config info for things in the Old World.
#
# ===============================================================
# config
include "range-helpers.rds.hpp"

# ss
include "ss/difficulty.rds.hpp"

# refl
include "refl/cdr.hpp"
include "refl/enum-map.hpp"

# cdr
include "cdr/ext-builtin.hpp"

namespace "rn.config.old_world"

struct.Taxes {
  # Taxes will never be increased above this.
  maximum_tax_rate 'int',

  # Below this turn count there will never be tax change events.
  min_turn_for_tax_change_events 'int',

  # The number of turns between each tax change event will be se-
  # lected uniformly from this interval.
  turns_between_tax_change_events 'IntRange',

  # Probability that a tax change event will be an increase (as
  # opposed to a decrease).
  tax_increase 'config::Probability',

  # When a tax change happens, this is the range of values. These
  # should always be positive; if the tax event is a lowering
  # then this will be subtracted from the current rate instead of
  # added.
  tax_rate_change 'IntRange',

  # Just after accepting help from the king there is a proba-
  # bility that a tax increase will happen immediately. These
  # give the probability of an increase along with range.
  intervention_increase 'config::Probability',
  intervention_increase_range 'IntRange',
}

struct.Boycotts {
  # After each tax increase is refused (and a tea party had) the
  # number of (fractional) rebels will get a boost in the colony
  # that had the party, and the boost will be chosen randomly
  # from this range. Note that the boost is not permanent; if the
  # colony's bell production is not sufficient to sustain it then
  # it will start decreasing again.
  rebels_bump_after_party 'DoubleRange',

  # The formula that the OG seems to use to compute back taxes is
  # to take the current ask price (in hundreds) and multiply it
  # by 500, which would be equivalent to purchasing (without
  # taxes) 5 cargo holds of the commodity.
  back_taxes_ask_multiplier 'int',

  # When a tea party is held, this is the maximum quantity of a
  # commodity that will be thrown overboard. Sometimes a colony
  # can have more than 100 of something if it has a warehouse,
  # but even in that case the OG does not seem to exceed 100.
  max_commodity_quantity_to_throw 'int',
}

struct.Treasure {
  king_transport_tax_multiplier 'int',
  king_transport_cut_range 'IntRange',
}

namespace "rn"

struct.config_old_world_t {
  taxes 'refl::enum_map<e_difficulty, config::old_world::Taxes>',

  boycotts 'config::old_world::Boycotts',

  # When the king raises taxes, occasionally he will do so in
  # honor of his recent marriage to his Nth wife. This is the
  # minimum number of wives that he can have, and will be used to
  # initialize his wife count.
  min_king_wife_number 'int',

  # Things having to do with treasure train reimbursement by the
  # king.
  treasure 'refl::enum_map<e_difficulty, config::old_world::Treasure>',

  _features { equality, validation }
}

config.old_world {}
