# ===============================================================
# input.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-13.
#
# Description: RDS definitions for the input module impl.
#
# ===============================================================
# gfx
include "gfx/cartesian.hpp"

namespace "rn.input"

# This type will keep track of the dragging state of a given
# mouse button. When a drag is initiated is it represented as a
# `maybe` state; in this state the drag event is not yet sent as
# such to the consumers of input events. Instead, it will remain
# in the `maybe` state until the mouse moves a certain number of
# pixels away from the origin (buffer) to allow for a bit of
# noise in mouse motion during normal clicks. When it leaves this
# buffer region (just a few pixels wide) then it will be con-
# verted to a `dragging` event and will be sent out as such with
# origin equal to the original origin of the `maybe` state. This
# aims to make clicking easier by preventing flaky behavior where
# the user inadvertantly triggers a drag event by accidentally
# moving the mouse a bit during a click (that would be bad be-
# cause it would not be sent as a click event).
sumtype.drag_phase {
  none {},
  maybe {
    origin 'gfx::point',
  },
  dragging {
    origin 'gfx::point',
    phase 'e_drag_phase',
  },
}
