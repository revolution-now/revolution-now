# ===============================================================
# land-view-impl.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-13.
#
# Description: RDS definitions for the land-view module.
#
# ===============================================================
# Revolution Now
include "input.hpp"
include "physics.hpp"
include "unit-id.hpp"
include "command.rds.hpp"
include "white-box.rds.hpp"

# ss
include "ss/dwelling-id.hpp"

# gfx
include "gfx/coord.hpp"

namespace "rn"

sumtype.LandViewMode {
  none {}, # held only transiently while switching modes.
  end_of_turn {},
  unit_input {
    unit_id 'UnitId',
  },
  # This mode is for either mouse (drag) or keyboard goto selec-
  # tion mode.
  goto_mode {
    start_tile 'gfx::point',
    # NOTE: this tile may be off of the map. This is ok since we
    # do allow it to be one tile off the left or right edge to
    # allow the player to send ships to the harbor. The reason we
    # represent such goto commands with a tile and not the dedi-
    # cated `harbor` mode is because with the latter then you
    # lose the player's desired path to get to the high seas, so
    # e.g. if the unit is on the left side of the map and the
    # player drags a ship off the right edge of the map, we don't
    # want the ship traveling to the left simply because that is
    # a shorter path to the high seas, given that the player ex-
    # plicitly chose the right side.
    curr_tile 'gfx::point',
  },
  hidden_terrain {},
  # This is a mode that can be entered mid-turn where units pause
  # from asking for orders and where the white box tile is shown.
  view_mode {},
}

sumtype.LandViewRawInput {
  cmd {
    what 'command',
  },
  tile_click {
    coord 'Coord',
    mods 'input::mod_keys',
  },
  tile_right_click {
    coord 'Coord',
    mods 'input::mod_keys',
  },
  tile_enter {
    tile 'gfx::point',
    mods 'input::mod_keys',
  },
  mouse_over {
    where 'gfx::point',
    tile 'maybe<gfx::point>',
    # Could be off the map if the map edge is visible. In that
    # case the `tile` above will be nothing.
    hypothetical_tile 'gfx::point',
  },
  mouse_click_outside_of_map {
    buttons 'input::e_mouse_button_event',
    hypothetical_tile 'gfx::point',
  },
  zoom_changed {},
  center {}, # Center on blinking unit, if any.
  next_turn {},
  hidden_terrain {},
  view_mode {
    options 'ViewModeOptions',
  },
  european_status {},
  escape {},
  goto_port {},
  goto_harbor {},
  goto_tile {},
  reveal_map {},
  toggle_map_reveal {},
  cheat_create_unit {},
  activate {
    tile 'gfx::point',
  },
  move_mode {},
  context_menu {
    where 'gfx::point',
    tile 'gfx::point',
  },
  goto_drag_start  {},
  goto_drag_finish {},
  goto_drag_cancel {},
}
