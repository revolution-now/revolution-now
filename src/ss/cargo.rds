# ===============================================================
# cargo.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-13.
#
# Description: RDS definitions for the cargo module.
#
# ===============================================================
# Revolution Now
include "ss/commodity.rds.hpp"
include "ss/unit-id.hpp"

# C++ standard library
include "<vector>"

namespace "rn"

sumtype.Cargo {
  unit {
    id 'UnitId',
  },
  commodity {
    obj 'Commodity',
  },
}

# Here is an example of the way the cargo layout works:
#
# +------------------------------------------------------------+
# |         |         |         |         |         |          |
# |  Comm.  | UnitId  | Overfl. |  Empty  |  Empty  |  UnitId  |
# |         |         |         |         |         |          |
# +------------------------------------------------------------+
#      1        2         3          4         5         6
#
# That means that the first slot is occupied by a commodity, the
# second AND third slots are occupied by a single unit that takes
# up two slots, the fourth slot is empty, the fifth slot is
# empty, and the last slot is occupied by a unit (that takes one
# slot).
#
# NOTE: the `empty` state must be first in the list so that it it
# will be the default-constructed value.
sumtype.CargoSlot {
  empty {},
  overflow {},
  cargo {
    contents 'Cargo',
  },
}

namespace "rn.wrapped"

struct.CargoHold {
  # This will be of fixed length (number of total slots).
  slots 'std::vector<CargoSlot>',

  _features { equality, validation }
}
