# ===============================================================
# revolution.rds
#
# Project: Revolution Now
#
# Created by David P. Sicilia on 2024-04-13.
#
# Description: Rds definitions for the ss/revolution module.
#
# ===============================================================
namespace "rn"

# Note: it is important that these go in chronological order so
# that we can use inequality operators on them, which we do in
# some places. E.g. if status <= declared then...
enum.e_revolution_status {
  not_declared,
  declared,
  won, # For the AI player this means "granted".
}

enum.e_expeditionary_force_type {
  regular,
  cavalry,
  artillery,
  man_o_war,
}

# How many of each unit the king has added into his expeditionary
# force. These will grow as the game progresses.
struct.ExpeditionaryForce {
  regular   'int',
  cavalry   'int',
  artillery 'int',
  man_o_war 'int',
}

struct.InterventionForce {
  continental_army 'int',
  continental_cavalry 'int',
  artillery 'int',
  man_o_war 'int',
}

struct.RevolutionState {
  # This is a percent in [0, 100].
  rebel_sentiment 'int',

  # This is just used to improve messaging to the player.
  last_reported_rebel_sentiment 'int',

  status 'e_revolution_status',

  # Allows us to schedule one-off events to happen on the turn
  # following the one where independence is declared, and to do
  # so in a way that is compatible with the OG's data model. E.g.
  # another way to do this would be to record the turn where we
  # declared independence, but that would not be convertible to
  # the OG's model because the OG does not appear to record that,
  # and it is important that we get this right because it con-
  # trols when such things happen as the promotion of units to
  # continental armies after declaration.
  turn_after_declaration_has_been_done 'bool',

  armies_promoted 'bool',

  # This will be set to true once the player has earned (through
  # sufficient liberty bells) the help of the intervention force.
  # Once it is true, each turn will bring a few intervention
  # units to the new world.
  intervention_force_deployed 'bool',

  # When this is set, the REF will forfeight at the end of its
  # next turn (in this same turn cycle). This flag exists in the
  # OG and does what it says when set, but it has only ever been
  # observed to be set by the OG in response to the cheat func-
  # tion "advance revolution status". Even when the war is won
  # normally and the REF forfeights, this flag does not appear to
  # get set. So it is possible it exists only to facilitate cheat
  # mode. For that purpose it is also useful for us.
  ref_will_forfeit 'bool',

  # TODO: need to represent other state such as "Tory Uprising".
  # Some say this is caused by loyalty in a single colony. Maybe
  # this is better stored in the colony state.

  # Royal expeditionary force.
  expeditionary_force 'ExpeditionaryForce',

  intervention_force 'InterventionForce',

  _features { equality, validation }
}
