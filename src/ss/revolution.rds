# ===============================================================
# revolution.rds
#
# Project: Revolution Now
#
# Created by David P. Sicilia on 2024-04-13.
#
# Description: Rds definitions for the ss/revolution module.
#
# ===============================================================
namespace "rn"

# Note: it is important that these go in chronological order so
# that we can use inequality operators on them, which we do in
# some places. E.g. if status <= declared then...
enum.e_revolution_status {
  not_declared,
  declared,
  won, # For the AI player this means "granted".
}

# How many of each unit the king has added into his expeditionary
# force. These will grow as the game progresses.
struct.ExpeditionaryForce {
  regulars  'int',
  cavalry   'int',
  artillery 'int',
  men_o_war 'int',
}

struct.InterventionForce {
  continental_army 'int',
  continental_cavalry 'int',
  artillery 'int',
  men_o_war 'int',
}

struct.RevolutionState {
  # This is a percent in [0, 100].
  rebel_sentiment 'int',

  # This is just used to improve messaging to the player.
  last_reported_rebel_sentiment 'int',

  status 'e_revolution_status',

  armies_promoted 'bool',

  # This will be set to true once the player has earned (through
  # sufficient liberty bells) the help of the intervention force.
  # Once it is true, each turn will bring a few intervention
  # units to the new world.
  intervention_force_deployed 'bool',

  # When this is set, the REF will forfeight at the end of its
  # next turn. The OG has a corresponding flag, and in general it
  # can be set when there are still some remaining REF units.
  # Some say that it happens when all Regulars have been elimi-
  # nated, though that doesn't seem to happen in all cases.
  ref_will_forfeit 'bool',

  # TODO: need to represent other state such as "Tory Uprising".
  # Some say this is caused by loyalty in a single colony. Maybe
  # this is better stored in the colony state.

  # Royal expeditionary force.
  expeditionary_force 'ExpeditionaryForce',

  intervention_force 'InterventionForce',

  _features { equality, validation }
}
