# ===============================================================
# map-square.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2021-03-02.
#
# Description: Serializable state representing a map square.
#
# ===============================================================
# Rds
include "ss/terrain-enums.rds.hpp"

# base
include "base/maybe.hpp"

namespace "rn"

# Important: since there are so many of these, it is best to set
# it up so that the most common values of the fields will be
# their default values so that they can be omitted from the save
# file.
struct.MapSquare {
  # Is this land or water.
  surface 'e_surface',

  # All land tiles must specify a value for this. For water
  # squares it is ignored, but should probably just assume its
  # default value.
  #
  # Hills and mountains also need a value for this, but just for
  # rendering purposes (it has no bearing on game mechanics). For
  # hills and mountains, for some reason, the original game does
  # not derive this from surrounding squares, not sure why. It
  # could be that adjacent water tiles need that information (see
  # next paragraph) so it is useful to have it recorded instead
  # of derived on the fly.
  #
  # Water tiles that border land will need a ground type for ren-
  # dering purposes, but the original game appears to derive
  # those from adjacent squares instead of allowing them to be
  # specified manually. Experiments with the map editor seem to
  # show that first priority is given to the land square to the
  # left of the water tile, then if there is no land there it
  # will check the one below, and so on in clockwise fashion
  # (left, bottom, right, top).
  ground 'e_ground_terrain',

  # Forest, hills, or mountains.
  overlay 'base::maybe<e_land_overlay>',

  # Note that forest squares can have rivers too, but not moun-
  # tains or hills.
  river 'base::maybe<e_river>',

  # This is any special resource that a square has that increases
  # production of a certain commodity beyond what can normally be
  # produced by its terrain type. It will be represented as its
  # own icon on top of the square. According to the rules of the
  # original game, each resource type can only appear on one type
  # of square (one type of ground terrain and/or one type of
  # overlay). When a square is forested then theoretically both
  # of these can be set; in that case, only the forest_resource
  # will be visible and will be in effect. If that forest is then
  # cleared, the forest_resource will be removed and the
  # ground_resource will appear. If only a ground_resource is
  # present on a square with a forest then it won't be visible
  # until the forest is cleared. Note that, according to the re-
  # source distribution algorithm used in the original game, a
  # given square will have at most one of these set (that is not
  # how the original game represented it data wise, but it has
  # the same result with more flexibility for modding).
  ground_resource 'base::maybe<e_natural_resource>',
  forest_resource 'base::maybe<e_natural_resource>',

  # This can only be done on certain squares, and also can't
  # co-exist with a forest terrain type.
  irrigation 'bool',

  # This can exist on any land square.
  road 'bool',

  # Only on ocean squares. The only difference between this and
  # regular ocean squares is that when a ship enters a sea lane
  # square the game will ask if they want to sail to the old
  # world.
  sea_lane 'bool',

  # In the original game this was a giant gold coin over the
  # square that you could enter to risk either getting some kind
  # of reward or making the natives unhappy.
  lost_city_rumor 'bool',

  _features { equality, validation }
}
