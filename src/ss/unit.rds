# ===============================================================
# unit.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2021-02-28.
#
# Description: RDS definitions for the unit module.
#
# ===============================================================
# gs
include "ss/cargo.hpp"
include "ss/mv-points.hpp"
include "ss/nation.rds.hpp"
include "ss/unit-composer.hpp"
include "ss/unit-id.hpp"

namespace "rn"

enum.e_unit_orders {
  none,
  sentry,
  # In the original game, when a unit fortifies, it does not gain
  # the benefits of fortification until the next turn. That way
  # you can't just immediately fortify when an enemy approaches
  # and gain the benefits. This is visually indicated on the flag
  # by rendering a dimmer 'F' after the fortification has gone
  # into effect. A unit will remain in the `fortifying` stage
  # until the next turn.
  fortifying,
  fortified,
  road,
  plow,
}

namespace "rn.wrapped"

struct.Unit {
  id 'UnitId',
  composition 'rn::UnitComposition',
  orders 'e_unit_orders',
  cargo 'rn::CargoHold',
  nation 'e_nation',
  mv_pts 'MovementPoints',

  # If the unit is building a road or plowing, this is the number
  # of turns it has work (does not include the turn where they
  # are first assigned the job). This number is only relevant
  # when the unit has orders to build a road or plow.
  turns_worked 'int',

  # For ships damaged in combat. A damaged ship can be either in
  # a colony (with a Drydock) or in the european harbor. When
  # this has a value, it means that the ship is damaged and has
  # been so for the given number of turns.
  damaged 'base::maybe<int>',

  _features { equality, validation }
}
