# ===============================================================
# gs-settings.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-05-28.
#
# Description: Rds definitions for save-game settings data.
#
# ===============================================================
# ss
include "ss/difficulty.rds.hpp"

# refl
include "refl/enum-map.hpp"

namespace "rn"

# These are the on/off ones that the player can change from the
# Game->Game Options menu once the game starts and which get
# saved with the save file.
enum.e_game_menu_option {
  show_indian_moves,
  show_foreign_moves,
  fast_piece_slide,
  end_of_turn,
  autosave,
  combat_analysis,
  water_color_cycling,
  tutorial_hints,
  show_fog_of_war,
}

# These are options that are changeable during the game.
struct.InGameOptions {
  # Options in the Game->Game Options menu.
  game_menu_options 'refl::enum_map<e_game_menu_option, bool>',
}

# These are options that are configured once at the start of a
# new game and cannot be changed thereafter.
struct.GameSetupOptions {
  difficulty 'e_difficulty', # discoverer, explorer, etc.

  # NOTE: if this is disabled for a game then it might not be
  # possible to convert to the OG's SAV format, which only has
  # four slots, after the war of independence. We may want to
  # warn the player about that.
  disable_war_of_succession 'bool',
}

struct.CheatOptions {
  enabled 'bool',
}

struct.ColonyOptions {
  # Are numbers enabled over the production icon spreads in the
  # colony view. When this is on they will always be shown, but
  # note that even when it is off they may still be shown in cer-
  # tain cases to aid readability.
  numbers 'bool',
}

struct.SettingsState {
  # These are options that are configured once at the start of a
  # new game and cannot be changed thereafter.
  game_setup_options 'GameSetupOptions',

  # These are options that are changeable during the game from
  # the Game->Game Options menu.
  in_game_options 'InGameOptions',

  cheat_options 'CheatOptions',

  colony_options 'ColonyOptions',

  _features { equality, validation }
}
