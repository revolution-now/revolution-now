# ===============================================================
# spread-builder.rds
#
# Project: Revolution Now
#
# Created by David P. Sicilia on 2025-01-20.
#
# Description: Rds definitions for the spread-builder module.
#
# ===============================================================
# Revolution Now
include "spread-render.rds.hpp"

# config
include "config/tile-enum-fwd.hpp"

# C++ standard library
include "<vector>"

namespace "rn"

enum.e_red_x_size {
  small, # 12x12
  large, # 14x14
}

struct.SpreadXs {
  size 'e_red_x_size',
  starting_position 'int',
}

struct.TileSpread {
  tile 'e_tile',
  count 'int',
  red_xs 'base::maybe<SpreadXs>',
  # After all is said and done, the number on the label (if ren-
  # dered) can be overridden with this.
  label_override 'base::maybe<int>',
}

struct.TileSpreadOptions {
  bounds 'int', # Total horizontal space in pixels available.
  label_policy 'SpreadLabels',
  # If labels are displayed then these options will be used.
  label_opts 'SpreadLabelOptions',
}

struct.TileSpreadConfig {
  tile 'TileSpread',
  options 'TileSpreadOptions',
}

struct.ProgressTileSpreadConfig {
  tile 'e_tile',
  count 'int',
  progress_count 'int',
  # After all is said and done, the number on the label (if ren-
  # dered) can be overridden with this.
  label_override 'base::maybe<int>',
  options 'TileSpreadOptions',
}

struct.InhomogeneousTileSpreadConfig {
  tiles 'std::vector<e_tile>',
  # Defaults to 1, which means that there can be at most 1 pixel
  # of space between icons, not including the width of the icons
  # themselves.
  max_spacing 'base::maybe<int>',
  options 'TileSpreadOptions',
}

struct.TileSpreadConfigMulti {
  tiles 'std::vector<TileSpread>',
  options 'TileSpreadOptions',
  group_spacing 'int',
}
