# ===============================================================
# renderer.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-10-04.
#
# Description: Rds definitions for the renderer module.
#
# ===============================================================
namespace "rr"

enum.e_render_buffer_phase {
  # This is the first phase of rendering that is always done. It
  # renders all of the actual contents.
  normal,

  # This is the second phase where the output of the first phase
  # is read from a texture and moved onto the screen, potentially
  # with some postprocessing effects. If the texture written to
  # by phase 1 has a size equal to the logical resolution then
  # this will also implicitly have the effect of enforcing strict
  # pixelation.
  postprocessing,
}

# These should be in order of rendering.
enum.e_render_buffer {
  # -------------------------------------------------------------
  # Phase 1 buffers.
  # -------------------------------------------------------------
  # The backdrop buffer can be used if something needs to be ren-
  # dered behind the landscape buffer. We can't put it in the
  # normal buffer since that will be rendered on top of the land-
  # scape buffer. But we may not want to put it in the landscape
  # buffer because it might need to be dynamic.
  backdrop,
  landscape,
  # This is used to modify tiles in the landscape buffer by just
  # overwriting them. This buffer will be drawn overtop of the
  # landscape buffer.
  landscape_annex,
  # This is for one-time rendering of a subset of map tiles that
  # is simply drawn over the landscape buffer to replace them.
  landscape_anim_replace,
  # For rendering pixelations of landscape tiles. The idea here
  # is that we draw a bunch of tiles to this buffer in the same
  # manner as we would to the normal landscape buffer, and then
  # we adjust a uniform each frame to enpixelate the buffer as a
  # whole, which creates the effect of a bunch of landscape tiles
  # pixelating to another state. Doing it this way means that we
  # don't have to redraw those landscape tiles each frame, so it
  # is scalable.
  landscape_anim_enpixelate,
  # For units, colonies, and dwellings.
  entities,
  # For the overlays that signal both unexplored terrain and
  # fog-of-war (when enabled). The reason that the fog overlays
  # get put into a different buffer is so that we can draw the
  # entities (e.g. units) in between the landscape and fog lay-
  # ers.
  obfuscation,
  obfuscation_annex,
  normal,

  # -------------------------------------------------------------
  # Post-Processing buffers.
  # -------------------------------------------------------------
  postprocessing,
}

# Describes a range of vertices and the buffer the are in. This
# is used to record the location of the vertices corresponding to
# a map tile in case they need to be overwritten.
struct.VertexRange {
  buffer 'rr::e_render_buffer',
  start  'long',
  finish 'long',
}
