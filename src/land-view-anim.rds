# ===============================================================
# land-view-anim.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2023-01-09.
#
# Description: Rds definitions for the land-view-anim module.
#
# ===============================================================
# Revolution Now
include "maybe.hpp"
include "physics.hpp"

# config
include "config/tile-enum-fwd.hpp"

# ss
include "ss/dwelling-id.hpp"
include "ss/map-square.rds.hpp"
include "ss/native-enums.rds.hpp"
include "ss/unit-id.hpp"
include "ss/unit-type.rds.hpp"

# gfx
include "gfx/coord.hpp"

# C++ standard library
include "<unordered_map>"

namespace "rn"

# These are animation primitives. A unit "move" is a slide, and a
# unit attack sequence is constructed from a slide + depixela-
# tion.
sumtype.UnitAnimationState {
  # This will draw the unit in front all other units and
  # colonies, with the exception of units that are being animated
  # in some other way, which will always go on top.
  front {},
  hide {},
  blink {
    visible 'bool',
  },
  slide {
    direction 'e_direction',
    percent 'double',
    percent_vel 'DissipativeVelocity',
  },
  depixelate_euro_unit {
    stage 'double',
    # If we're depixelating to another unit this will have a
    # value; otherwise we are depixelating to nothing.
    target 'maybe<e_unit_type>',
  },
  depixelate_native_unit {
    stage 'double',
    # If we're depixelating to another unit this will have a
    # value; otherwise we are depixelating to nothing.
    target 'maybe<e_native_unit_type>',
  },
  # Start from nothing and gradually reveal the tile.
  enpixelate_unit {
    stage 'double',
  },
}

sumtype.ColonyAnimationState {
  depixelate {
    stage 'double',
  },
}

sumtype.DwellingAnimationState {
  depixelate {
    stage 'double',
  },
}

sumtype.LandscapeAnimBufferState {
  # This will cause the landscape_anim buffer to be rendered
  # (once) with the replaced tiles, then the uniform depixelation
  # stage for rendering the landscape_anim buffer will be ramped
  # down from 1.0 to 0, gradually replacing the contents of the
  # landscape buffer with the landscape_anim buffer.
  pixelation {
    # This flag is enabled for one frame to get the renderer to
    # render the buffer once, then it is turned off for the rest
    # of the animation since the animation being done is the pix-
    # elation of the entire landscape_anim buffer, which is con-
    # trolled via a uniform.
    needs_rendering 'bool',
    stage 'double',
    targets 'std::unordered_map<Coord, MapSquare>',
  },

  # This will cause the landscape_anim buffer to be rendered
  # (once) with the replaced tiles and overlayed on top of the
  # landscape buffer, replacing it for the tiles in question (and
  # their immediate surroundings).
  mod {
    needs_rendering 'bool', # See comment above.
    modded 'std::unordered_map<Coord, MapSquare>',
  },
}
