# ===============================================================
# land-view-anim.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2023-01-09.
#
# Description: Rds definitions for the land-view-anim module.
#
# ===============================================================
# Revolution Now
include "maybe.hpp"
include "physics.hpp"

# config
include "config/tile-enum-fwd.hpp"

# ss
include "ss/dwelling-id.hpp"
include "ss/native-enums.rds.hpp"
include "ss/unit-id.hpp"
include "ss/unit-type.rds.hpp"

# gfx
include "gfx/coord.rds.hpp"

namespace "rn"

# These are animation primitives. A unit "move" is a slide, and a
# unit attack sequence is constructed from a slide + depixela-
# tion.
sumtype.UnitAnimationState {
  # This will draw the unit in front all other units and
  # colonies, with the exception of units that are being animated
  # in some other way, which will always go on top.
  front {},
  hide {},
  blink {
    visible 'bool',
  },
  slide {
    direction 'e_direction',
    percent 'double',
    percent_vel 'DissipativeVelocity',
  },
  depixelate_unit {
    stage 'double',
    # If we're depixelating to another unit this will have a
    # value; otherwise we are depixelating to nothing. For a na-
    # tive unit this would happen if e.g. a brave wins a battle
    # and acquires muskets or horses.
    target 'maybe<e_tile>',
  },
  # Start from nothing and gradually reveal the tile.
  enpixelate_unit {
    stage 'double',
  },
}

sumtype.ColonyAnimationState {
  depixelate {
    stage 'double',
  },
}

sumtype.DwellingAnimationState {
  depixelate {
    stage 'double',
  },
}
