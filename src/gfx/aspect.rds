# ===============================================================
# aspect.rds
#
# Project: Revolution Now
#
# Created by David P. Sicilia on 2024-10-09.
#
# Description: Rds definitions for the gfx/aspect module.
#
# ===============================================================
# gfx
include "cartesian.hpp"

# base
include "base/maybe.hpp"

namespace "gfx"

enum.e_named_aspect_ratio {
  _16x9,
  _16x10,
  _4x3,
  _21x9,
  _1x1,
}

struct.LogicalResolution {
  resolution 'size',
  scale 'int',
}

struct.InexactLogicalResolution {
  target_logical 'size',
  scale 'int',
  lg_clipped 'rect',
  logical 'size',
  buffer 'size',
  score 'double',
}

struct.ResolutionTolerance {
  max_missing_pixels 'base::maybe<int>',
  max_extra_pixels 'base::maybe<int>',
  min_percent_covered 'base::maybe<double>',
  score_cutoff 'base::maybe<double>',
}

struct.ResolutionAnalysis {
  physical 'size',
  exact_fits 'std::vector<LogicalResolution>',
  inexact_fits 'std::vector<InexactLogicalResolution>',
}

struct.Resolution {
  physical 'size',
  exact 'bool',
  target_logical 'size',
  scale 'int',
  lg_clipped 'rect',
  logical 'size',
  buffer 'size',
  score 'double',
}

struct.ResolutionRatings {
  available 'std::vector<Resolution>',
  unavailable 'std::vector<Resolution>',
}
