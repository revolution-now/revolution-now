colony_visibility_radius: 1

warehouses {
  # Maximum amount of non-food quantity of a commodity that can
  # be stored in a colony with no warehouses.
  default_max_quantity: 100

  # Maximum amount of non-food quantity of a commodity that can
  # be stored in a colony with a warehouse.
  warehouse_max_quantity: 200

  # Maximum amount of non-food quantity of a commodity that can
  # be stored in a colony with a warehouse expansion.
  warehouse_expansion_max_quantity: 300

  # The original game doesn't seem to impose a limit on the
  # amount of food that can be stored. This is to allow exceeding
  # 100 without a warehouse in order to get to 200 which is
  # needed to create a new colonist (and creating a new colonist
  # at 100 made it too easy).
  commodities_with_warehouse_limit {
    food:        false
    sugar:       true
    tobacco:     true
    cotton:      true
    furs:        true
    lumber:      true
    ore:         true
    silver:      true
    horses:      true
    rum:         true
    cigars:      true
    cloth:       true
    coats:       true
    trade_goods: true
    tools:       true
    muskets:     true
  }
}

food_for_creating_new_colonist: 200

# This is the maximum pythagorean distance that we will search in
# the vicinity of a starting square for a colony that is "close
# by". It is used e.g. in giving context for the location of a
# battle.
#
# The below value was chosen so that a circle with that radius
# approximately covers a "standard" screen size.
search_dist_for_nearby_colony: 7.0

# The maximum number of people that be placed in each (indoor)
# colony building. The original game uses 3.
max_workers_per_building: 3

initial_colony_buildings {
  armory:               false
  blacksmiths_house:    true
  carpenters_shop:      true
  fur_traders_house:    true
  rum_distillers_house: true
  tobacconists_house:   true
  weavers_house:        true
  blacksmiths_shop:     false
  fur_trading_post:     false
  lumber_mill:          false
  magazine:             false
  rum_distillery:       false
  tobacconists_shop:    false
  weavers_shop:         false
  arsenal:              false
  cigar_factory:        false
  fur_factory:          false
  iron_works:           false
  rum_factory:          false
  textile_mill:         false
  town_hall:            true
  printing_press:       false
  newspaper:            false
  schoolhouse:          false
  college:              false
  university:           false
  docks:                false
  drydock:              false
  shipyard:             false
  stable:               false
  stockade:             false
  fort:                 false
  fortress:             false
  warehouse:            false
  warehouse_expansion:  false
  church:               false
  cathedral:            false
  custom_house:         false
}

outdoors {
  job_names {
    food:    Farmer
    fish:    Fisherman
    sugar:   Sugar Planter
    tobacco: Tobacco Planter
    cotton:  Cotton Planter
    furs:    Fur Trapper
    lumber:  Lumberjack
    ore:     Ore Miner
    silver:  Silver Miner
  }
}

requirements_for_building {
  # When one edits a save file from the original game and removes
  # all buildings, one can see that they are all buildable and
  # they all have a cost in hammers, including the carpenter's
  # shop, which appears to cost 39 hammers. Of course, without a
  # carpenter's shop one cannot build anything else (including a
  # carpenter's shop) but one can still buy it. That might be an
  # interest game mode to play in, where you start with no build-
  # ings and have to earn enough money to buy a carpenter's shop
  # so that you can start building other things.
  carpenters_shop: {
    hammers:             39
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  lumber_mill: {
    hammers:             52
    tools:               0
    required_building:   carpenters_shop
    minimum_population:  3
    required_father:     null
    requires_water:      none
  }

  blacksmiths_house: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  blacksmiths_shop: {
    hammers:             64
    tools:               20
    required_building:   blacksmiths_house
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  iron_works: {
    hammers:             240
    tools:               100
    required_building:   blacksmiths_shop
    minimum_population:  8
    required_father:     adam_smith
    requires_water:      none
  }

  stockade: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  3
    required_father:     null
    requires_water:      none
  }

  fort: {
    hammers:             120
    tools:               100
    required_building:   stockade
    minimum_population:  3
    required_father:     null
    requires_water:      none
  }

  fortress: {
    hammers:             320
    tools:               200
    required_building:   fort
    minimum_population:  8
    required_father:     null
    requires_water:      none
  }

  tobacconists_house: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  tobacconists_shop: {
    hammers:             64
    tools:               20
    required_building:   tobacconists_house
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  cigar_factory: {
    hammers:             160
    tools:               100
    required_building:   tobacconists_shop
    minimum_population:  8
    required_father:     adam_smith
    requires_water:      none
  }

  weavers_house: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  weavers_shop: {
    hammers:             64
    tools:               20
    required_building:   weavers_house
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  textile_mill: {
    hammers:             160
    tools:               100
    required_building:   weavers_shop
    minimum_population:  8
    required_father:     adam_smith
    requires_water:      none
  }

  rum_distillers_house: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  rum_distillery: {
    hammers:             64
    tools:               20
    required_building:   rum_distillers_house
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  rum_factory: {
    hammers:             160
    tools:               100
    required_building:   rum_distillery
    minimum_population:  8
    required_father:     adam_smith
    requires_water:      none
  }

  fur_traders_house: {
    hammers:             56
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  fur_trading_post: {
    hammers:             56
    tools:               20
    required_building:   fur_traders_house
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  fur_factory: {
    hammers:             160
    tools:               100
    required_building:   fur_trading_post
    minimum_population:  8
    required_father:     adam_smith
    requires_water:      none
  }

  armory: {
    hammers:             52
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  magazine: {
    hammers:             120
    tools:               50
    required_building:   armory
    minimum_population:  8  # confirmed.
    required_father:     null
    requires_water:      none
  }

  arsenal: {
    hammers:             240
    tools:               100
    required_building:   magazine
    minimum_population:  8  # same as magazine.
    required_father:     adam_smith
    requires_water:      none
  }

  docks: {
    hammers:             52
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      yes
  }

  drydock: {
    hammers:             80
    tools:               50
    required_building:   docks
    minimum_population:  4
    required_father:     null
    requires_water:      coastal
  }

  shipyard: {
    hammers:             240
    tools:               100
    required_building:   drydock
    minimum_population:  8
    required_father:     null
    requires_water:      coastal
  }

  schoolhouse: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  4
    required_father:     null
    requires_water:      none
  }

  college: {
    hammers:             160
    tools:               50
    required_building:   schoolhouse
    minimum_population:  8
    required_father:     null
    requires_water:      none
  }

  university: {
    hammers:             200
    tools:               100
    required_building:   college
    minimum_population:  10
    required_father:     null
    requires_water:      none
  }

  warehouse: {
    hammers:             80
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  warehouse_expansion: {
    hammers:             80
    tools:               20
    required_building:   warehouse
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  stable: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  church: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  3
    required_father:     null
    requires_water:      none
  }

  cathedral: {
    hammers:             176
    tools:               100
    required_building:   church
    minimum_population:  8
    required_father:     null
    requires_water:      none
  }

  printing_press: {
    hammers:             52
    tools:               20
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  newspaper: {
    hammers:             120
    tools:               50
    required_building:   printing_press
    minimum_population:  4
    required_father:     null
    requires_water:      none
  }

  town_hall: {
    hammers:             64
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  custom_house: {
    hammers:             150
    tools:               50
    required_building:   null
    minimum_population:  1
    required_father:     peter_stuyvesant
    requires_water:      none
  }
}

requirements_for_unit  {
  wagon_train: {
    hammers:             40
    tools:               0
    required_building:   null
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  caravel: {
    hammers:             128
    tools:               40
    required_building:   shipyard
    minimum_population:  1
    required_father:     null
    requires_water:      coastal
  }

  merchantman: {
    hammers:             192
    tools:               80
    required_building:   shipyard
    minimum_population:  1
    required_father:     null
    requires_water:      coastal
  }

  galleon: {
    hammers:             320
    tools:               100
    required_building:   shipyard
    minimum_population:  1
    required_father:     null
    requires_water:      coastal
  }

  privateer: {
    hammers:             256
    tools:               120
    required_building:   shipyard
    minimum_population:  1
    required_father:     null
    requires_water:      coastal
  }

  frigate: {
    hammers:             512
    tools:               200
    required_building:   shipyard
    minimum_population:  1
    required_father:     null
    requires_water:      coastal
  }

  artillery: {
    hammers:             192
    tools:               40
    required_building:   armory
    minimum_population:  1
    required_father:     null
    requires_water:      none
  }

  # Not buildable in the original game. But note that OG did
  # specify the hammers and tools required for this unit in
  # NAMES.TXT in the @Units section (hammers=cost*32, tools=tool-
  # s*10). So it would be:
  #
  #   artillery: {
  #     hammers:             1024
  #     tools:               900
  #     required_building:   shipyard
  #     minimum_population:  1
  #     required_father:     null
  #     requires_water:      coastal
  #   }
  #
  man_o_war:              null

  petty_criminal:         null
  indentured_servant:     null
  free_colonist:          null
  native_convert:         null
  soldier:                null
  dragoon:                null
  pioneer:                null
  missionary:             null
  scout:                  null
  expert_farmer:          null
  expert_fisherman:       null
  expert_sugar_planter:   null
  expert_tobacco_planter: null
  expert_cotton_planter:  null
  expert_fur_trapper:     null
  expert_lumberjack:      null
  expert_ore_miner:       null
  expert_silver_miner:    null
  master_carpenter:       null
  master_distiller:       null
  master_tobacconist:     null
  master_weaver:          null
  master_fur_trader:      null
  master_blacksmith:      null
  master_gunsmith:        null
  elder_statesman:        null
  firebrand_preacher:     null
  hardy_colonist:         null
  jesuit_colonist:        null
  seasoned_colonist:      null
  veteran_colonist:       null
  veteran_soldier:        null
  veteran_dragoon:        null
  continental_army:       null
  continental_cavalry:    null
  regular:                null
  cavalry:                null
  hardy_pioneer:          null
  jesuit_missionary:      null
  seasoned_scout:         null
  damaged_artillery:      null
  treasure:               null
}

building_display_names {
  carpenters_shop:      "Carpenter's Shop"
  lumber_mill:          "Lumber Mill"
  blacksmiths_house:    "Blacksmith's House"
  blacksmiths_shop:     "Blacksmith's Shop"
  iron_works:           "Iron Works"
  stockade:             "Stockade"
  fort:                 "Fort"
  fortress:             "Fortress"
  tobacconists_house:   "Tobacconist's House"
  tobacconists_shop:    "Tobacconist's Shop"
  cigar_factory:        "Cigar Factory"
  weavers_house:        "Weaver's House"
  weavers_shop:         "Weaver's Shop"
  textile_mill:         "Textile Mill"
  rum_distillers_house: "Rum Distiller's House"
  rum_distillery:       "Rum Distillery"
  rum_factory:          "Rum Factory"
  fur_traders_house:    "Fur Trader's House"
  fur_trading_post:     "Fur Trading Post"
  fur_factory:          "Fur Factory"
  armory:               "Armory"
  magazine:             "Magazine"
  arsenal:              "Arsenal"
  docks:                "Docks"
  drydock:              "Drydock"
  shipyard:             "Shipyard"
  schoolhouse:          "Schoolhouse"
  college:              "College"
  university:           "University"
  warehouse:            "Warehouse"
  warehouse_expansion:  "Warehouse Expansion"
  stable:               "Stable"
  church:               "Church"
  cathedral:            "Cathedral"
  printing_press:       "Printing Press"
  newspaper:            "Newspaper"
  town_hall:            "Town Hall"
  custom_house:         "Custom House"
}

# Given an indoor job, this will return the plural names for a
# worker doing that job.
worker_names_plural {
  bells:   "statesmen"
  crosses: "preachers"
  hammers: "carpenters"
  rum:     "distillers"
  cigars:  "tobacconists"
  cloth:   "weavers"
  coats:   "fur traders"
  tools:   "blacksmiths"
  muskets: "gunsmiths"
  teacher: "teachers"
}

worker_names_singular {
  bells:   "statesman"
  crosses: "preacher"
  hammers: "carpenter"
  rum:     "distiller"
  cigars:  "tobacconist"
  cloth:   "weaver"
  coats:   "fur trader"
  tools:   "blacksmith"
  muskets: "gunsmith"
  teacher: "teacher"
}

colors {
  # In addition to a black shadow behind the unit (to the left),
  # we render a one-pixel "glow" on the right side of the unit
  # for ease of discerning the unit over the background terrain.
  outdoor_unit_glow_color: '#EEEEAA'

  # Units that are on a lighter background (such as indoor units)
  # that don't need as pronounced of a shadow color will get this
  # shadow color.
  unit_shadow_color_light: '#3C5050'
}

# For a given difficulty level, this gives the size N of the tory
# population which, when met or exceeded, causes a production
# penalty to apply. Moreover, the production penalty will be ap-
# plied multiple times for each multiple of N reached by the tory
# population. Note that this has nothing to do with overall
# colony size since it is not based on percentages; it only per-
# tains to the absolute size of the tory population.
tory_penalty_population {
  discoverer:   10
  explorer:      9
  conquistador:  8
  governor:      7
  viceroy:       6
}

# This is a percent bonus in [0.0, 1.0] that will be added to
# each colony's SoL percentage after acquiring Simon Bolivar. In
# the original game it is 0.2.
bolivar_sons_of_liberty_bonus: 0.2

# This is the (fractional) number of bells consumed by each
# (fractional) rebel in a colony each turn. Any surplus goes to-
# ward converting more tories to rebels. In the original game it
# is 2.0. Increasing this number will make it more difficult to
# raise Sons of Liberty membership.
bells_consumed_per_rebel: 2.0

# This is the (positive) value of the penalty that will be sub-
# tracted from all colonists production for each multiple N of
# tories, where N is determined by the difficulty level. In the
# original game it is 1. But note that this penalty will not al-
# ways manifest as precisely one unit reduction in production,
# since e.g. for indoor workers it is subtracted before other
# multipliers are applied. Also, note that in the original game,
# the tory penalty does not seem to get applied to the center
# square (though SoL bonuses do); in this game, we apply it
# equally to all squares, including the center square, since
# there doesn't seem to be a logical reason not to.
tory_production_penalty: 1

# These are the production bonuses that are applied in a colony
# when Sons of Liberty percent hits 50% and 100%, respectively.
# In the original game they appear to be the same for both indoor
# and outdoor workers, but differ between experts (2 and 4) and
# non-experts (1 and 2). Note that, for indoor jobs, these
# bonuses will not always manifest as precisely that increase in
# production, since e.g. for indoor workers it is added before
# other multipliers are applied. The original game seems to make
# a few exceptions to the outdoor bonuses; namely the center
# square only gets 1/2, and lumberjacks seemingly have the bonus
# applied in a different order. In this game, for simplicity, we
# will apply these equally to all squares and all occupations,
# including the center square.
sons_of_liberty_50_bonus_non_expert:  1
sons_of_liberty_50_bonus_expert:      2
sons_of_liberty_100_bonus_non_expert: 2
sons_of_liberty_100_bonus_expert:     4

on_the_job_training {
  # If the given unit type can be auto-promoted via on-the-job
  # training then this will give the probability, which is ap-
  # plied independently to every unit every turn.
  #
  # These probabilities are difficult to measure in the original
  # game because 1) they are small, and 2) the original game's
  # random number generator is very bad. So these are taken from
  # the strategy guide. They make sense at least relative to each
  # other, since the on-the-job promotion takes any unit directly
  # to an expert, so e.g. it makes sense that a petty criminal
  # has 1/3 the probability for this transition as a free
  # colonist, because a petty criminal conceptually passes
  # through three states in order to get there (first to an in-
  # dentured servant, then to a free colonist, then to an ex-
  # pert).
  #
  # The strategy guide's verbiage seems to indicate that these
  # probabilities are applied to each colonist (in each colony)
  # independently on each turn (which is how this game does it),
  # but that is difficult to verify due to the low probabilities.
  probabilities {
    petty_criminal:     0.003333333 # 1/300
    indentured_servant: 0.005       # 1/200
    free_colonist:      0.01        # 1/100

    # Note that in the original game, native converts cannot be
    # promoted by this mechanism; they can only be promoted by
    # obtaining bartolome_de_las_casas.
  }

  # Which indoor jobs are eligible for auto promotion. In the
  # original game, no indoor job is eligible for this.
  eligible_indoor_jobs {
    bells:   false
    crosses: false
    hammers: false
    rum:     false
    cigars:  false
    cloth:   false
    coats:   false
    tools:   false
    muskets: false
    teacher: false
  }

  # Which outdoor jobs are eligible for auto promotion. In the
  # original game, it is only the outdoor professions that are
  # not obtainable in the old world that are eligible.
  eligible_outdoor_jobs {
    food:    false
    fish:    false
    sugar:   true
    tobacco: true
    cotton:  true
    furs:    true
    lumber:  false
    ore:     false
    silver:  false
  }

  # In the original game, a unit can be promoted even when it is
  # working in a square that is not producing anything. This
  # could be a bug, and doesn't make much sense, so this game
  # will not allow that. But this flag allows turning it back on
  # if compatibility is desired.
  can_promote_with_zero_production: false
}

# Describes parameters related to teachers teaching in schools /
# colleges / universities.
teaching {
  # Number of turns needed for promoting one unit from one
  # teacher.
  turns_needed {
    schoolhouse: 4
    college:     6
    university:  8
  }

  # Maximum number of teachers that a given school type can hold.
  max_teachers {
    schoolhouse: 1
    college:     2
    university:  3
  }

  # This gives the minimum school building level that is needed
  # to teach the given activity.
  school_type_for_activity {
    # Schoolhouse.
    farming:          schoolhouse
    fishing:          schoolhouse
    fur_trapping:     schoolhouse
    lumberjacking:    schoolhouse
    ore_mining:       schoolhouse
    silver_mining:    schoolhouse
    carpentry:        schoolhouse
    pioneering:       schoolhouse
    scouting:         schoolhouse
    teaching:         schoolhouse # unused

    # College.
    sugar_planting:   college
    tobacco_planting: college
    cotton_planting:  college
    rum_distilling:   college
    tobacconistry:    college
    weaving:          college
    fur_trading:      college
    blacksmithing:    college
    gunsmithing:      college
    fighting:         college

    # University.
    missioning:       university
    bell_ringing:     university
    preaching:        university
  }
}

# Parameters describing what happens when a construction project
# that is not yet finished is rushed (buy).
rush_construction {
  # Cost per remaining hammer.
  cost_per_hammer: 26

  # The cost per remaining tool is given by B+M*A, where B is a
  # fixed base cost, A is the current market ask price in hun-
  # dreds, and M is a fixed multiplier. In the OG B=8 and M=2,
  # and this is independent of difficulty level.
  base_cost_per_tool: 8
  tools_ask_price_multiplier: 2

  # If tools are boycotted, are we still allowed to rush a con-
  # struction that would require acquiring tools? In the OG we
  # are allowed, though putting this to false might make things
  # more interesting (difficult).
  allow_rushing_tools_during_boycott: true
}

# Things related to the operation of the custom house building.
custom_house {
  # When the quantity of a commodity reaches this value then it
  # will be sold (though perhaps only partially).
  threshold_for_sell: 100

  # When selling a commodity, always leave at least this amount.
  amount_to_retain: 50

  # When the custom house is first built, these will be the com-
  # modities selected for selling.
  initial_commodities {
    food:        false
    sugar:       true
    tobacco:     true
    cotton:      true
    furs:        true
    lumber:      false
    ore:         true
    silver:      true
    horses:      false
    rum:         true
    cigars:      true
    cloth:       true
    coats:       true
    trade_goods: false
    tools:       false
    muskets:     false
  }

  # What percent charge (intead of the current tax rate) should
  # be imposed on a custom house sale after independence is de-
  # clared? The strategy guide (and other resources) seem to in-
  # dicate that this charge is supposed to be used
  # post-declaration, though it may not be working in all ver-
  # sions of the game.
  charge_during_revolution: 50

  # In this game the custom house cannot by default sell goods
  # that are boycotted. The OG seems to ignore boycotts when
  # selling via custom house, but this is probably a bug, since
  # the strategy guide does not mention boycott-resistance as
  # being among the abilities of the custom house (FreeCol sug-
  # gests its a bug as well). So in this game we have this config
  # flag that controls it, and it defaults to making the custom
  # house respect boycotts. That means that the custom house will
  # simply not sell goods that are boycotted.
  respect_boycotts: true
}

# Things related to notifications on colony updates.
notifications {
  # Each time the SoL percent increases or decreases beyond a
  # value in this list, a notification will be presented. This
  # must include 50 and 100, because we want the player to be no-
  # tified about those because they have implications for produc-
  # tion.
  sons_of_liberty_notification_thresholds: [25, 50, 75, 90, 100]
}
