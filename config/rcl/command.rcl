# Number of turns taken for road orders by a non-expert pioneer
# for each given terrain type. The hardy pioneer will complete it
# in half that many turns (rounded down), with one turn minimum,
# which is how the original game appears to do it.
road_turns {
  arctic:    4
  boreal:    4
  broadleaf: 4
  conifer:   4
  desert:    3
  grassland: 3
  hills:     4
  marsh:     5
  mixed:     4
  mountains: 7
  ocean:     0 # ignored.
  plains:    3
  prairie:   3
  rain:      7
  savannah:  3
  scrub:     4
  swamp:     7
  tropical:  6
  tundra:    4
  wetland:   6
}

# Number of turns taken for a plow order by a non-expert pioneer
# for each given terrain type, if the order is supported there.
# For forested types that means clearing the forest, or irriga-
# tion otherwise. The hardy pioneer will complete it in half that
# many turns (rounded down), with one turn minimum, which is how
# the original game appears to do it.
plow_turns {
  # The original game appears to allow plowing arctic squares,
  # though there doesn't seem to be a reason for doing so because
  # it doesn't enable anything to be produced there.
  arctic:    6
  boreal:    6
  broadleaf: 6
  conifer:   6
  desert:    5
  grassland: 5
  hills:     null
  marsh:     7
  mixed:     6
  mountains: null
  ocean:     null
  plains:    5
  prairie:   5
  rain:      9
  savannah:  5
  scrub:     6
  swamp:     9
  tropical:  8
  tundra:    6
  wetland:   8
}

# Config info regarding how much lumber is yielded when clearing
# a forest. Note that this only applies when there is a friendly
# colony nearby to receive the lumber (and even then, it can only
# receive what it has capacity for).
lumber_yield {
  # When there is no lumber mill in the colony the base yield is
  # tile-independent. In the OG this value is 20.
  base_yield_no_lumber_mill: 20

  # When there is a lumber mill in the colony the following for-
  # mulate applies:
  #
  #   base yield = (E + Y)*M
  #
  # where Y is the amount of lumber produced by a free colonist
  # on the tile without any bonuses (e.g. river), E is an addi-
  # tional fixed amount added on, and M is a fixed multiplier.
  # The strategy guide's formula suggests that E=0, but experi-
  # ments suggest it is 2. In the OG M=10.
  tile_yield_extra: 2
  multiplier: 10

  # The total yield is then the base yield, but potentially mul-
  # tiplied by this factor if the pioneer is hardy.
  hardy_multiplier: 2
}

go_to {
  # Setting this to true makes the game mirror the behavior of
  # the OG more closely with respect to unit path finding (i.e.,
  # the "goto" command). Specifically, in the OG, path finding is
  # done as if the entire map were visible in order to choose the
  # optimal path, even if it involves tiles that the player has
  # not yet explored. By default we do not replicate that behav-
  # ior; path finding is done without knowledge of any tiles that
  # the player hasn't yet explored, and it makes a best-effort
  # attempt at finding an optimal path given that limitation. The
  # purpose of doing this is so that the player cannot use the
  # goto command to "cheat", i.e. by allowing it to implicitly
  # leak information about the map that the player does not yet
  # have. Thus, this flag is false by default. But it can be set
  # to 'true' to replicate the OG's path finding.
  #
  # NOTE: even with this flag as 'false', this game allows equiv-
  # alent "omniscient" path finding effectively via the cheat
  # menu when the entire map is visible.
  omniscient_path_finding: false
}
